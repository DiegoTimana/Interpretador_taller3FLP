#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 104 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 83 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 82 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1           0 1638 0 29 3 10 #"#lang eopl"
0 0 25 29 1 #"\n"
0 0 17 3 62
#";################### TALLER 3 FLP ############################"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";Alexis Diego Timan\303\241 Romero (1870385)"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";Luis Eduardo Ruiz Casta\303\261o (1831986)"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";Gabriel De Jes\303\272s Arango (1823077)"
0 0 25 29 1 #"\n"
0 0 17 3 62
#";#############################################################"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";1"
0 0 17 3 2 #") "
0 0 17 3 7 #"Dise\303\261e"
0 0 17 3 1 #" "
0 0 17 3 2 #"un"
0 0 17 3 1 #" "
0 0 17 3 13 #"interpretador"
0 0 17 3 1 #" "
0 0 17 3 4 #"para"
0 0 17 3 1 #" "
0 0 17 3 2 #"la"
0 0 17 3 1 #" "
0 0 17 3 9 #"siguiente"
0 0 17 3 1 #" "
0 0 17 3 10 #"gram\303\241tica"
0 0 17 3 1 #" "
0 0 17 3 3 #"que"
0 0 17 3 1 #" "
0 0 17 3 7 #"realiza"
0 0 17 3 1 #" "
0 0 17 3 11 #"operaciones"
0 0 17 3 1 #" "
0 0 17 3 3 #"con"
0 0 17 3 1 #" "
0 0 17 3 17 #"notaci\303\263n infija:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";Valores"
0 0 17 3 1 #" "
0 0 17 3 10 #"denotados:"
0 0 17 3 1 #" "
0 0 17 3 5 #"Texto"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 7 #"N\303\272mero"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 8 #"Booleano"
0 0 17 3 1 #" "
0 0 17 3 9 #"+ ProcVal"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";Valores"
0 0 17 3 1 #" "
0 0 17 3 10 #"expresado:"
0 0 17 3 1 #" "
0 0 17 3 5 #"Texto"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 7 #"N\303\272mero"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 8 #"Booleano"
0 0 17 3 1 #" "
0 0 17 3 9 #"+ ProcVal"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";<programa>"
0 0 17 3 1 #" "
0 0 17 3 15 #":=  <expresion>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";              "
0 0 17 3 11 #"un-programa"
0 0 17 3 6 #" (exp)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 12 #";<expresion>"
0 0 17 3 1 #" "
0 0 17 3 2 #":="
0 0 17 3 60
#" <numero>                                         numero-lit"
0 0 17 3 6 #" (num)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #";            "
0 0 17 3 2 #":="
0 0 17 3 1 #" "
0 0 17 3 58
#"\"\\\"\"<texto> \"\\\"\"                                 texto-lit"
0 0 17 3 6 #" (txt)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #";            "
0 0 17 3 2 #":="
0 0 17 3 57 #" <identificador>                                  var-exp"
0 0 17 3 5 #" (id)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #";            "
0 0 17 3 2 #":="
0 0 17 3 2 #" ("
0 0 17 3 9 #"expresion"
0 0 17 3 1 #" "
0 0 17 3 19 #"<primitiva-binaria>"
0 0 17 3 1 #" "
0 0 17 3 35 #"expresion)        primapp-bin-exp ("
0 0 17 3 4 #"exp1"
0 0 17 3 6 #" exp2)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #";            "
0 0 17 3 2 #":="
0 0 17 3 1 #" "
0 0 17 3 18 #"<primitiva-unaria>"
0 0 17 3 2 #" ("
0 0 17 3 49 #"expresion)                   primapp-un-exp (exp)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 20 #";<primitiva-binaria>"
0 0 17 3 1 #" "
0 0 17 3 2 #":="
0 0 17 3 2 #"  "
0 0 17 3 1 #"+"
0 0 17 3 17 #" (primitiva-suma)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";                    :="
0 0 17 3 2 #"  "
0 0 17 3 1 #"~"
0 0 17 3 18 #" (primitiva-resta)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";                    "
0 0 17 3 2 #":="
0 0 17 3 2 #"  "
0 0 17 3 1 #"/"
0 0 17 3 16 #" (primitiva-div)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";                    "
0 0 17 3 2 #":="
0 0 17 3 2 #"  "
0 0 17 3 1 #"*"
0 0 17 3 18 #" (primitiva-multi)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";                    "
0 0 17 3 2 #":="
0 0 17 3 2 #"  "
0 0 17 3 6 #"concat"
0 0 17 3 19 #" (primitiva-concat)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";<primitiva-unaria>:="
0 0 17 3 2 #"  "
0 0 17 3 8 #"longitud"
0 0 17 3 20 #" (primitiva-logitud)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";                  "
0 0 17 3 2 #":="
0 0 17 3 2 #"  "
0 0 17 3 4 #"add1"
0 0 17 3 17 #" (primitiva-add1)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";                  "
0 0 17 3 2 #":="
0 0 17 3 2 #"  "
0 0 17 3 4 #"sub1"
0 0 17 3 17 #" (primitiva-sub1)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 9         559 22           0 0           0 92 0 14 3 5 #"Tenga"
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 6 #"cuenta"
0 0 25 3 1 #" "
0 0 14 3 4 #"que:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 9 #"<numero>:"
0 0 25 3 1 #" "
0 0 14 3 4 #"Debe"
0 0 25 3 1 #" "
0 0 15 3 9 #"definirse"
0 0 25 3 1 #" "
0 0 14 3 4 #"para"
0 0 25 3 1 #" "
0 0 14 3 7 #"valores"
0 0 25 3 1 #" "
0 0 14 3 9 #"decimales"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 7 #"enteros"
0 0 25 3 2 #" ("
0 0 14 3 9 #"positivos"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 9 #"negativos"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 8 #"<texto>:"
0 0 25 3 1 #" "
0 0 14 3 4 #"Debe"
0 0 25 3 1 #" "
0 0 15 3 9 #"definirse"
0 0 25 3 1 #" "
0 0 14 3 4 #"para"
0 0 25 3 1 #" "
0 0 14 3 9 #"cualquier"
0 0 25 3 1 #" "
0 0 14 3 5 #"texto"
0 0 25 3 1 #" "
0 0 14 3 7 #"escrito"
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 6 #"racket"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 16 #"<identificador>:"
0 0 25 3 1 #" "
0 0 14 3 2 #"En"
0 0 25 3 1 #" "
0 0 14 3 4 #"este"
0 0 25 3 1 #" "
0 0 14 3 8 #"lenguaje"
0 0 25 3 1 #" "
0 0 14 3 4 #"todo"
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 14 3 9 #"iniciar\303\241"
0 0 25 3 1 #" "
0 0 14 3 3 #"con"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 8 #"s\303\255mbolo"
0 0 25 3 2 #"  "
0 0 14 3 1 #"@"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 5 #"decir"
0 0 25 3 1 #" "
0 0 14 3 3 #"las"
0 0 25 3 1 #" "
0 0 14 3 9 #"variables"
0 0 25 3 1 #" "
0 0 14 3 2 #"@x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 2 #"@z"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 7 #"v\303\241lida"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 25 #"; ESPECIFICACI\303\223N L\303\211XICA"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"lexica"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"'"
0 0 25 3 2 #"(("
0 0 14 3 8 #"white-sp"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 10 #"whitespace"
0 0 25 3 2 #") "
0 0 14 3 4 #"skip"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 10 #";(booleano"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 2 #";("
0 0 17 3 3 #"\"#\""
0 0 17 3 1 #" "
0 0 17 3 5 #"digit"
0 0 17 3 2 #" ("
0 0 17 3 5 #"arbno"
0 0 17 3 1 #" "
0 0 17 3 5 #"digit"
0 0 17 3 3 #")) "
0 0 17 3 8 #"boolean)"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"texto"
0 0 25 3 1 #" "
0 0 17 3 7 #";nombre"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"letter"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 4 #"))) "
0 0 14 3 6 #"string"
0 0 25 3 1 #")"
0 0 17 3 30 #";como se va a trabajar el dato"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 125
(
 #";cosas como que los textos se hagan entre comillas o que algo este e"
 #"ntreparentesis es mas sencillo trabajarlo en la gramatica"
) 0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"comentario"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 19 3 4 #"\"<<\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 1 #" "
0 0 22 3 9 #"#\\newline"
0 0 25 3 4 #"))) "
0 0 14 3 4 #"skip"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"identificador"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 19 3 3 #"\"@\""
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 4 #"))) "
0 0 14 3 2 #"sy"
0 0 14 3 1 #"m"
0 0 14 3 3 #"bol"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"numero"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 3 #")) "
0 0 14 3 6 #"number"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"numero"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 19 3 2 #"\"-"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 3 #")) "
0 0 14 3 6 #"number"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"numero"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"."
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 3 #")) "
0 0 14 3 6 #"number"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"numero"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 19 3 2 #"\"-"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"."
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 3 #")) "
0 0 14 3 6 #"number"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #"; ESPECIFICACION GRAM\303\201TICA"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 8 #"programa"
0 0 25 3 2 #" ("
0 0 14 3 9 #"expresion"
0 0 25 3 2 #") "
0 0 14 3 11 #"un-programa"
0 0 25 3 2 #") "
0 0 17 3 46 #";hacemos esto mirando la gramatica que nos dan"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 12 #";expresiones"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"expresion"
0 0 25 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 25 3 2 #") "
0 0 14 3 10 #"numero-lit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 2 #";("
0 0 17 3 9 #"expresion"
0 0 17 3 12 #" (booleano) "
0 0 17 3 13 #"booleano-lit)"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 17 3 49 #";para que me reconozca las comillas del texto    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"expresion"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"\\\""
0 0 19 3 1 #"\""
0 0 14 3 5 #"texto"
0 0 19 3 3 #"\"\\\""
0 0 19 3 1 #"\""
0 0 25 3 2 #") "
0 0 14 3 9 #"texto-lit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"expresion"
0 0 25 3 2 #" ("
0 0 14 3 13 #"identificador"
0 0 25 3 2 #") "
0 0 14 3 7 #"var-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"expresion"
0 0 25 3 2 #" ("
0 0 19 3 4 #"\"Si\""
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"entonces\""
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"sino\""
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"finSI\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 14 3 15 #"condicional-exp"
0 0 25 3 2 #") "
0 0 17 3 8 #";punto 4"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"expresion"
0 0 25 3 2 #" ("
0 0 19 3 10 #"\"declarar\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 19 3 3 #"\";\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"}\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 14 3 17 #"variableLocal-exp"
0 0 25 3 2 #") "
0 0 17 3 8 #";punto 5"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"expresion"
0 0 25 3 3 #" ( "
0 0 19 3 2 #"\"("
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 17 #"primitiva-binaria"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 19 3 2 #"\")"
0 0 19 3 1 #"\""
0 0 25 3 4 #" )  "
0 0 14 3 15 #"primapp-bin-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"expresion"
0 0 25 3 2 #" ("
0 0 14 3 16 #"primitiva-unaria"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"("
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 19 3 2 #"\")"
0 0 19 3 1 #"\""
0 0 25 3 3 #")  "
0 0 14 3 14 #"primapp-un-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 21 #";primitivas binarias "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"primitiva-binaria"
0 0 25 3 2 #" ("
0 0 19 3 2 #"\"+"
0 0 19 3 1 #"\""
0 0 25 3 2 #") "
0 0 14 3 14 #"primitiva-suma"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"primitiva-binaria"
0 0 25 3 2 #" ("
0 0 19 3 2 #"\"~"
0 0 19 3 1 #"\""
0 0 25 3 2 #") "
0 0 14 3 15 #"primitiva-resta"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"primitiva-binaria"
0 0 25 3 2 #" ("
0 0 19 3 2 #"\"/"
0 0 19 3 1 #"\""
0 0 25 3 2 #") "
0 0 14 3 13 #"primitiva-div"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"primitiva-binaria"
0 0 25 3 2 #" ("
0 0 19 3 2 #"\"*"
0 0 19 3 1 #"\""
0 0 25 3 2 #") "
0 0 14 3 14 #"primitiva-mult"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"primitiva-binaria"
0 0 25 3 2 #" ("
0 0 19 3 7 #"\"concat"
0 0 19 3 1 #"\""
0 0 25 3 2 #") "
0 0 14 3 16 #"primitiva-concat"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 19 #";primitivas unarias"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 16 #"primitiva-unaria"
0 0 25 3 2 #" ("
0 0 19 3 9 #"\"longitud"
0 0 19 3 1 #"\""
0 0 25 3 2 #") "
0 0 14 3 18 #"primitiva-longitud"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 16 #"primitiva-unaria"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"add1"
0 0 19 3 1 #"\""
0 0 25 3 2 #") "
0 0 14 3 14 #"primitiva-add1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 16 #"primitiva-unaria"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"sub1"
0 0 19 3 1 #"\""
0 0 25 3 2 #") "
0 0 14 3 14 #"primitiva-sub1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";############GENERAN LOS DATATYPES####################"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 28 #"sllgen:make-define-datatypes"
0 0 25 3 1 #" "
0 0 14 3 6 #"lexica"
0 0 25 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"show-the-datatypes"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 5 #" () ("
0 0 14 3 28 #"sllgen:list-define-datatypes"
0 0 25 3 1 #" "
0 0 14 3 6 #"lexica"
0 0 25 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";########################################################"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 17 3 119
(
 #";si le paso algo el tiene en cuenta la gramatica (reconoce datos que"
 #" hayamos definido anteriormente numeros texto, etc)"
) 0 0 25 29 1 #"\n"
0 0 25 3 5 #"   ( "
0 0 14 3 25 #"sllgen:make-string-parser"
0 0 25 3 1 #" "
0 0 17 3 41 #";lo retorna como estructura (scan&parse \""
0 0 17 3 3 #"9\")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 14 3 6 #"lexica"
0 0 25 3 20 #"                    "
0 0 17 3 54 #"; retorna #(struct:un-programa #(struct:numero-lit 9))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 14 3 9 #"gramatica"
0 0 25 3 4 #" ) )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"just-scan"
0 0 25 3 1 #" "
0 0 17 3 108
(
 #";no nos retorna la estructura, solo nos dice que tipo de dato es seg"
 #"un la lexica y en que linea se encuentra"
) 0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 26 #"sllgen:make-string-scanner"
0 0 25 3 1 #" "
0 0 14 3 6 #"lexica"
0 0 25 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 25 3 3 #")) "
0 0 17 3 21 #";ejemplo (just-scan \""
0 0 17 3 2 #"@x"
0 0 17 3 1 #" "
0 0 17 3 4 #"3\" )"
0 0 25 29 1 #"\n"
0 0 25 3 49 #"                                                 "
0 0 17 3 53 #";retorna #(struct:un-programa #(struct:numero-lit 9))"
0 0 25 29 1 #"\n"
0 0 17 3 65
(
 #";El Interpretador (FrontEnd + Evaluaci\303\263n + se\303\261al para "
 #"lectura )"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"interpretador"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 20 #"sllgen:make-rep-loop"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"DLG-->"
0 0 19 3 1 #"\""
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pgm"
0 0 25 3 3 #") ("
0 0 14 3 12 #"eval-program"
0 0 25 3 2 #"  "
0 0 14 3 3 #"pgm"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 25 #"sllgen:make-stream-parser"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 6 #"lexica"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 9 #"gramatica"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";El Interprete"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";eval-program: <programa> -> numero"
0 0 25 29 1 #"\n"
0 0 17 3 106
(
 #"; funci\303\263n que eval\303\272a un programa teniendo en cuenta un"
 #" ambiente dado (se inicializa dentro del programa)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"eval-program"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pgm"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 8 #"programa"
0 0 25 3 1 #" "
0 0 14 3 3 #"pgm"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"un-programa"
0 0 25 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 25 3 3 #") ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 2 #" ("
0 0 14 3 8 #"init-env"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"eval-exp"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 10 #"numero-lit"
0 0 25 3 2 #" ("
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 9 #"texto-lit"
0 0 25 3 2 #" ("
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 7 #"var-exp"
0 0 25 3 2 #" ("
0 0 14 3 1 #"v"
0 0 25 3 3 #") ("
0 0 14 3 15 #"buscar-variable"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 3 #") )"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 15 #"primapp-bin-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 15 3 3 #"let"
0 0 25 3 2 #" ("
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                        "
0 0 17 3 10 #";variables"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 6 #"valor1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 6 #"valor2"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                        "
0 0 17 3 7 #";cuerpo"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 18 #"eval-primitiva-bin"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor1"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor2"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 14 #"primapp-un-exp"
0 0 25 3 2 #" ("
0 0 14 3 6 #"primUn"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                     ("
0 0 15 3 3 #"let"
0 0 25 3 2 #" ("
0 0 25 29 1 #"\n"
0 0 25 3 44 #"                                           ("
0 0 14 3 3 #"arg"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 17 #"eval-primitiva-un"
0 0 25 3 1 #" "
0 0 14 3 6 #"primUn"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 15 #"condicional-exp"
0 0 25 3 2 #" ("
0 0 14 3 8 #"test-exp"
0 0 25 3 1 #" "
0 0 14 3 8 #"true-exp"
0 0 25 3 1 #" "
0 0 14 3 9 #"false-exp"
0 0 25 3 2 #") "
0 0 17 3 7 #";punto4"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 13 #"valor-verdad?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 1 #" "
0 0 14 3 8 #"test-exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #")) ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 1 #" "
0 0 14 3 8 #"true-exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                          ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 1 #" "
0 0 14 3 9 #"false-exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 17 #"variableLocal-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 6 #"cuerpo"
0 0 25 3 2 #") "
0 0 17 3 8 #";punto 5"
0 0 25 29 1 #"\n"
0 0 25 3 42 #"                                         ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"args"
0 0 25 3 2 #" ("
0 0 14 3 10 #"eval-rands"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 44 #"                                           ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 1 #" "
0 0 14 3 6 #"cuerpo"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 44 #"                                           ("
0 0 14 3 10 #"extend-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 17 3 75
(
 #"; funciones auxiliares para aplicar eval-expression a cada elemento "
 #"de una "
) 0 0 25 29 1 #"\n"
0 0 17 3 34 #"; lista de operandos (expresiones)"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"eval-rands"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 5 #"rands"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 9 #"eval-rand"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")) "
0 0 14 3 5 #"rands"
0 0 25 3 4 #"))) "
0 0 17 3 108
(
 #";mapea el lambda con cada elemento de la lista de expresiones (le ll"
 #"egan en sintaxis abstracta) que le llega"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"eval-rand"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rand"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"eval-exp"
0 0 25 3 1 #" "
0 0 14 3 4 #"rand"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))) "
0 0 17 3 123
(
 #";evalua cada elemento, para que al final as\303\255 los cuerpos ya n"
 #"o est\303\251n en sitaxis abstracta y pueda aplicar el extended-env"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"eval-primitiva-bin"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 6 #"valor1"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor2"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 17 #"primitiva-binaria"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 14 #"primitiva-suma"
0 0 25 3 5 #" () ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor1"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 15 #"primitiva-resta"
0 0 25 3 5 #" () ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor1"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 14 #"primitiva-mult"
0 0 25 3 5 #" () ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor1"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 13 #"primitiva-div"
0 0 25 3 5 #" () ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor1"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 16 #"primitiva-concat"
0 0 25 3 5 #" () ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor1"
0 0 25 3 1 #" "
0 0 14 3 6 #"valor2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 17 #"eval-primitiva-un"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 6 #"primUn"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 16 #"primitiva-unaria"
0 0 25 3 1 #" "
0 0 14 3 6 #"primUn"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 14 #"primitiva-add1"
0 0 25 3 5 #" () ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 14 #"primitiva-sub1"
0 0 25 3 5 #" () ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 18 #"primitiva-longitud"
0 0 25 3 5 #" () ("
0 0 14 3 13 #"string-length"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 95
(
 #";##############TODO LO DE AMBIENTES (PARA QUE FUNCIONEN) necesarios "
 #"siempre####################"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";definici\303\263n del tipo de dato ambiente"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 25 3 1 #" "
0 0 14 3 11 #"environment"
0 0 25 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 16 #"empty-env-record"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 19 #"extended-env-record"
0 0 25 3 2 #" ("
0 0 14 3 4 #"syms"
0 0 25 3 2 #" ("
0 0 14 3 7 #"list-of"
0 0 25 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 4 #"vals"
0 0 25 3 2 #" ("
0 0 14 3 7 #"list-of"
0 0 25 3 1 #" "
0 0 14 3 13 #"scheme-value?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"scheme-value?"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"v"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";empty-env:      -> enviroment"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";funci\303\263n que crea un ambiente vac\303\255o"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"empty-env"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" ()"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 16 #"empty-env-record"
0 0 25 3 10 #")))       "
0 0 17 3 43 #";llamado al constructor de ambiente vac\303\255o "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 73
(
 #";extend-env: <list-of symbols> <list-of numbers> enviroment -> envir"
 #"oment"
) 0 0 25 29 1 #"\n"
0 0 17 3 40 #";funci\303\263n que crea un ambiente extendido"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"extend-env"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"syms"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 19 #"extended-env-record"
0 0 25 3 1 #" "
0 0 14 3 4 #"syms"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))) "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 89
(
 #";*******************************************************************"
 #"*********************"
) 0 0 25 29 1 #"\n"
0 0 17 3 21 #";Funciones Auxiliares"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 65
(
 #"; funciones auxiliares para encontrar la posici\303\263n de un s\303"
 #"\255mbolo"
) 0 0 25 29 1 #"\n"
0 0 17 3 40 #"; en la lista de s\303\255mbolos de unambiente"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"list-find-position"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"sym"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"list-index"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sym1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"eqv?"
0 0 25 3 1 #" "
0 0 14 3 4 #"sym1"
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 3 #")) "
0 0 14 3 3 #"los"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"list-index"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"pred"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 4 #"pred"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 12 #"list-index-r"
0 0 25 3 2 #" ("
0 0 14 3 10 #"list-index"
0 0 25 3 1 #" "
0 0 14 3 4 #"pred"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 12 #"list-index-r"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 12 #"list-index-r"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 22 3 2 #"#f"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";############## PUNTO 2 ###########"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";2"
0 0 17 3 1 #")"
0 0 17 3 6 #"Defina"
0 0 17 3 1 #" "
0 0 17 3 2 #"un"
0 0 17 3 1 #" "
0 0 17 3 8 #"ambiente"
0 0 17 3 1 #" "
0 0 17 3 7 #"inicial"
0 0 17 3 1 #" "
0 0 17 3 3 #"con"
0 0 17 3 1 #" "
0 0 17 3 3 #"las"
0 0 17 3 1 #" "
0 0 17 3 9 #"variables"
0 0 17 3 2 #" ("
0 0 17 3 2 #"@a"
0 0 17 3 1 #" "
0 0 17 3 2 #"@b"
0 0 17 3 1 #" "
0 0 17 3 2 #"@c"
0 0 17 3 1 #" "
0 0 17 3 2 #"@d"
0 0 17 3 1 #" "
0 0 17 3 24 #"@e) con valores (1 2 3 \""
0 0 17 3 4 #"hola"
0 0 17 3 3 #"\" \""
0 0 17 3 29 #"FLP\") y modifique su funci\303\263n"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";evaluar-expresi\303\263n para que acepte dicho ambiente."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"init-env"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" ()"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"extend-env"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 2 #"@a"
0 0 25 3 1 #" "
0 0 14 3 2 #"@b"
0 0 25 3 1 #" "
0 0 14 3 2 #"@c"
0 0 25 3 1 #" "
0 0 14 3 2 #"@d"
0 0 25 3 1 #" "
0 0 14 3 2 #"@e"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"hola"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"FLP"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 9 #"empty-env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";Dise\303\261e"
0 0 17 3 1 #" "
0 0 17 3 3 #"una"
0 0 17 3 1 #" "
0 0 17 3 8 #"funci\303\263n"
0 0 17 3 1 #" "
0 0 17 3 7 #"llamada"
0 0 17 3 2 #" ("
0 0 17 3 15 #"buscar-variable"
0 0 17 3 2 #") "
0 0 17 3 3 #"que"
0 0 17 3 1 #" "
0 0 17 3 6 #"recibe"
0 0 17 3 1 #" "
0 0 17 3 2 #"un"
0 0 17 3 1 #" "
0 0 17 3 8 #"s\303\255mbolo"
0 0 17 3 2 #" ("
0 0 17 3 13 #"identificador"
0 0 17 3 2 #") "
0 0 17 3 1 #"y"
0 0 17 3 1 #" "
0 0 17 3 2 #"un"
0 0 17 3 30 #" ambiente, retorna el valor si"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";encuentra"
0 0 17 3 1 #" "
0 0 17 3 2 #"la"
0 0 17 3 1 #" "
0 0 17 3 8 #"variable"
0 0 17 3 37 #" en el ambiente. En caso contrario: \""
0 0 17 3 5 #"Error"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 2 #"la"
0 0 17 3 1 #" "
0 0 17 3 8 #"variable"
0 0 17 3 1 #" "
0 0 17 3 2 #"no"
0 0 17 3 1 #" "
0 0 17 3 7 #"existe\""
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 46
#";funci\303\263n que busca un s\303\255mbolo en un ambiente"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"buscar-variable"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 11 #"environment"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 16 #"empty-env-record"
0 0 25 3 3 #" ()"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 8 #"variable"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 7 #"existe\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 19 #"extended-env-record"
0 0 25 3 2 #" ("
0 0 14 3 4 #"syms"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 3 #"pos"
0 0 25 3 2 #" ("
0 0 14 3 18 #"list-find-position"
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 1 #" "
0 0 14 3 4 #"syms"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 3 #"pos"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 8 #"list-ref"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 3 #"pos"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 15 #"buscar-variable"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 7 #")))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";################# PUNTO 3 #####################"
0 0 25 29 1 #"\n"
0 0 17 3 4 #";3) "
0 0 17 3 10 #"Implemente"
0 0 17 3 1 #" "
0 0 17 3 3 #"los"
0 0 17 3 14 #" Booleanos: En"
0 0 17 3 1 #" "
0 0 17 3 3 #"una"
0 0 17 3 1 #" "
0 0 17 3 10 #"expresi\303\263n"
0 0 17 3 1 #" "
0 0 17 3 12 #"num\303\251rica, 0"
0 0 17 3 1 #" "
0 0 17 3 9 #"es falso,"
0 0 17 3 1 #" "
0 0 17 3 9 #"cualquier"
0 0 17 3 1 #" "
0 0 17 3 41 #"otro caso es verdadero. Para esto dise\303\261e"
0 0 25 29 1 #"\n"
0 0 17 3 57
(
 #";la funci\303\263n valor-verdad? que realiza esta verificaci\303\263"
 #"n"
) 0 0 25 29 1 #"\n"
0 0 17 3 90
(
 #";true-value?: determina si un valor dado corresponde a un valor bool"
 #"eano falso o verdadero"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"valor-verdad?"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";################# PUNTO 4 #####################"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";4) Extienda la gram\303\241tica con condicionales:"
0 0 25 29 1 #"\n"
0 0 17 3 20 #";        <expresion>"
0 0 17 3 1 #" "
0 0 17 3 2 #":="
0 0 17 3 1 #" "
0 0 17 3 2 #"Si"
0 0 17 3 1 #" "
0 0 17 3 56 #"<expresion> entonces <expresion>  sino <expresion> finSI"
0 0 25 29 1 #"\n"
0 0 17 3 69
(
 #";                       condicional-exp (test-exp true-exp false-exp"
 #")"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #"; Hecho, mirar la gram\303\241tica."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";################# PUNTO 5 #####################"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";5"
0 0 17 3 47 #") Implemente declaraci\303\263n de variables locales:"
0 0 25 29 1 #"\n"
0 0 17 3 12 #";<expresion>"
0 0 17 3 1 #" "
0 0 17 3 2 #":="
0 0 17 3 61
#" declarar (<identificador> = <expresion> (;)) { <expresion> }"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";               variableLocal-exp (ids exps cuerpo)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 7 #"; hecho"
0           0
